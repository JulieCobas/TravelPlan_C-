@model projet_csharp_travel_plan_frontend.DTO.ReservationCreateViewModel

@{
    ViewData["Title"] = "Nouvelle Réservation";
}

<h1 class="text-center mt-5">Nouvelle Réservation</h1>

<p class="description">Dans cette étape, veuillez sélectionner une option, c'est-à-dire l'élément que vous souhaitez réserver :</p>
<p class="description">Logement - Activité - Transport</p>
<p class="description">Cela vous redirigera sur une page qui vous proposera les différentes options disponibles !</p>

<div class="d-flex justify-content-center mt-5">
    <div class="card p-5 shadow-lg w-50">
        <form asp-action="Create" method="post" id="reservationForm">
            <div class="form-group">
                <label for="voyageId">Voyage</label>
                <select asp-for="IdVoyage" class="form-control" id="voyageId">
                    <option value="" disabled selected>Sélectionnez un voyage</option>
                    @foreach (var voyage in ViewBag.Voyages)
                    {
                        <option value="@voyage.Value">@voyage.Text</option>
                    }
                </select>
                <span class="text-danger" id="voyageError"></span>
            </div>
            <div class="form-group mt-3">
                <label for="selectedCountry">Pays</label>
                <select asp-for="SelectedCountry" asp-items="ViewBag.Countries" class="form-control" id="selectedCountry">
                    <option value="" disabled selected>Sélectionnez un pays</option>
                </select>
                <span class="text-danger" id="countryError"></span>
            </div>
            <div class="form-group mt-3">
                <label for="selectedOption">Option</label>
                <select asp-for="SelectedOption" asp-items="ViewBag.Options" class="form-control" id="selectedOption"></select>
                <span class="text-danger" id="optionError"></span>
            </div>
            <div class="form-group mt-4 d-flex justify-content-end">
                <button type="submit" class="btn btn-primary">Suivant</button>
            </div>
        </form>
    </div>
</div>

<style>
    .description {
        text-align: center;
    }

    .btn-primary {
        background-color: #337ab7;
        color: #fff;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

        .btn-primary:hover {
            background-color: #23527c;
        }

    .text-danger {
        font-size: 0.875em;
        color: #dc3545;
    }

    .error-border {
        border: 2px solid #dc3545 !important;
    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const voyageSelect = document.getElementById('voyageId');
            const options = Array.from(voyageSelect.options);

            // Extract the options excluding the disabled placeholder
            const voyageOptions = options.slice(1);

            // Sort the options by value (ID) in descending order
            voyageOptions.sort((a, b) => b.value - a.value);

            // Clear the select and append the sorted options
            voyageSelect.innerHTML = '';
            voyageSelect.appendChild(options[0]); // Re-add the placeholder option
            voyageOptions.forEach(option => voyageSelect.appendChild(option));

            document.getElementById('reservationForm').addEventListener('submit', function (event) {
                let valid = true;

                // Clear previous error messages and remove error borders
                document.getElementById('voyageError').innerText = '';
                document.getElementById('countryError').innerText = '';
                document.getElementById('optionError').innerText = '';
                document.getElementById('voyageId').classList.remove('error-border');
                document.getElementById('selectedCountry').classList.remove('error-border');

                // Check Voyage selection
                if (voyageSelect.value === '') {
                    document.getElementById('voyageError').innerText = 'Veuillez sélectionner un voyage.';
                    voyageSelect.classList.add('error-border');
                    valid = false;
                }

                // Check Country selection
                const countrySelect = document.getElementById('selectedCountry');
                if (countrySelect.value === '') {
                    document.getElementById('countryError').innerText = 'Veuillez sélectionner un pays.';
                    countrySelect.classList.add('error-border');
                    valid = false;
                }

                // If not valid, prevent form submission
                if (!valid) {
                    event.preventDefault();
                }
            });
        });
    </script>
}
