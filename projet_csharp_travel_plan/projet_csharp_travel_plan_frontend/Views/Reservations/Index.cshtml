@model IEnumerable<projet_csharp_travel_plan_frontend.DTO.ReservationPaysModelDTO>

@{
    ViewData["Title"] = "Index";
    System.Globalization.CultureInfo.CurrentCulture = new System.Globalization.CultureInfo("fr-FR");
}

<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="display-4 font-weight-bold">Réservations</h1>
        <a asp-action="Create" class="btn btn-primary btn-lg">Nouvelle Réservation</a>
    </div>

    <p class="description">Bienvenue dans votre page de réservations ! Trouvez ici toutes les réservations que vous avez effectuées ! Vous pouvez également consulter les détails de chacune des réservations !</p>

    <!-- Formulaire de filtres -->
    <div class="filters mb-4">
        <form id="filter-form" class="d-flex align-items-center justify-content-between w-100">
            <div class="form-group">
                <div class="form-group">
                    <label for="filter-date">Rechercher une Date :</label>
                    <input type="text" id="filter-date" class="form-control" placeholder="jj.mm.aaaa" />
                </div>
            </div>
            <div class="form-group">
                <label for="filter-type">Type de réservation :</label>
                <select id="filter-type" class="form-control">
                    <option value="">Tous</option>
                    <option value="Logement">Logement</option>
                    <option value="Activité">Activité</option>
                    <option value="Transport">Transport</option>
                </select>
            </div>
            <div class="form-group">
                <label for="sort-date">Trier par :</label>
                <select id="sort-date" class="form-control">
                    <option value="asc">Date croissante</option>
                    <option value="desc">Date décroissante</option>
                </select>
            </div>
            <button type="button" id="reset-filters" class="btn btn-secondary">Réinitialiser</button>
        </form>
    </div>

    <div class="row flex-column" id="reservations-container">
        @foreach (var item in Model)
        {
            <div class="col-12 reservation-card mb-4"
                 data-date="@item.DateDebut.ToString("yyyy-MM-dd")"
                 data-type="@(item.Logement != null ? "Logement" : item.Activite != null ? "Activité" : item.Transport != null ? "Transport" : "Indéfini")">
                <div class="card shadow-sm flex-row position-relative">
                    <div class="country-section d-flex flex-column align-items-center justify-content-center">
                        <span class="badge badge-country">
                            &#127758; <!-- Icône de planète -->
                            @item.Voyage.NomPays
                        </span>
                    </div>
                    <div class="card-body d-flex justify-content-between align-items-start">
                        <div class="details-section">
                            <div class="date-time">
                                <span class="date-icon">&#128197;</span>
                                <span class="date-text">@item.DateDebut.ToString("dddd dd.MM.yyyy")</span>
                                <br />
                                <span class="time-icon">&#128337;</span>
                                <span class="time-text">@item.HeureDebut.ToString(@"hh\:mm")</span>
                            </div>
                            <hr>
                            @if (item.Logement != null)
                            {
                                <h5 class="card-title">@item.Logement.Nom</h5>
                                <p class="card-text">
                                    <strong>Hébergeur :</strong> @item.Logement.NomFournisseur<br />
                                    <strong>Prix :</strong> @item.Logement.PrixLogement CHF<br />
                                </p>
                            }
                            else if (item.Activite != null)
                            {
                                <h5 class="card-title">@item.Activite.Nom</h5>
                                <p class="card-text">
                                    <strong>Prestataire :</strong> @item.Activite.NomFournisseur<br />
                                    <strong>Prix :</strong> @item.Activite.PrixActivite CHF<br />
                                </p>
                            }
                            else if (item.Transport != null)
                            {
                                <h5 class="card-title">
                                    @if (item.Transport.CategorieTransportNom == "Avion")
                                    {
                                        <i class="fa-solid fa-plane-departure transport-icon"></i>
                                    }
                                    else if (item.Transport.CategorieTransportNom == "Train")
                                    {
                                        <i class="fa-solid fa-train transport-icon"></i>
                                    }
                                    else if (item.Transport.CategorieTransportNom == "Bateau")
                                    {
                                        <i class="fa-solid fa-ship transport-icon"></i>
                                    }
                                    @item.Transport.CategorieTransportNom
                                </h5>
                                <p class="card-text">
                                    <strong>Compagnie :</strong> @item.Transport.NomFournisseur<br />
                                    <strong>Lieu de départ :</strong> @item.Transport.LieuDepart<br />
                                    <strong>Prix :</strong> @item.Transport.Prix CHF<br />
                                </p>
                            }
                            else
                            {
                                <h5 class="card-title">Voyage: @item.IdVoyage</h5>
                                <p class="card-text">Aucun détail disponible</p>
                            }
                        </div>
                    </div>
                    <div class="badge-container">
                        @if (item.Logement != null)
                        {
                            <span class="badge badge-pill badge-primary">Logement</span>
                        }
                        else if (item.Activite != null)
                        {
                            <span class="badge badge-pill badge-success">Activité</span>
                        }
                        else if (item.Transport != null)
                        {
                            <span class="badge badge-pill badge-warning">Transport</span>
                        }
                    </div>
                    <a href="@Url.Action("Details", "Reservations", new { id = item.IdReservation })" class="btn btn-details">Détails</a>
                </div>
            </div>
        }
    </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const filterForm = document.getElementById('filter-form');
        const filterDate = document.getElementById('filter-date');
        const filterType = document.getElementById('filter-type');
        const sortDate = document.getElementById('sort-date');
        const resetButton = document.getElementById('reset-filters');
        const cards = document.querySelectorAll('.reservation-card');

        const applyFilters = () => {
            // Récupérer les valeurs des filtres
            var selectedDate = filterDate.value;
            var selectedType = filterType.value.toLowerCase();
            var sortOrder = sortDate.value;

            // Réinitialiser l'affichage de toutes les cartes
            cards.forEach(card => {
                card.style.display = 'block'; // Remettre toutes les cartes à l'état affiché
            });

            // Filtrer les cartes
            var filteredCards = Array.from(cards).filter(card => {
                var cardDate = card.getAttribute('data-date'); // Format "yyyy-MM-dd"
                var cardType = card.getAttribute('data-type').toLowerCase();

                var showCard = true;

                if (selectedDate) {
                    const isValidDateFormat = (date) => {
                        const regex = /^\d{2}\.\d{2}\.\d{4}$/;
                        return regex.test(date);
                    };

                    if (isValidDateFormat(selectedDate)) {
                        // Convertir la date saisie au format "yyyy-MM-dd" pour comparaison
                        const parts = selectedDate.split('.');
                        const formattedDate = `${parts[2]}-${parts[1]}-${parts[0]}`;
                        if (formattedDate !== cardDate) {
                            showCard = false;
                        }
                    } else {
                        showCard = false;
                    }
                }

                if (selectedType && selectedType !== cardType) {
                    showCard = false;
                }

                card.style.display = showCard ? 'block' : 'none';
                return showCard;
            });

            // Trier les cartes visibles
            if (sortOrder) {
                filteredCards.sort((a, b) => {
                    var dateA = new Date(a.getAttribute('data-date'));
                    var dateB = new Date(b.getAttribute('data-date'));

                    return sortOrder === 'asc' ? dateA - dateB : dateB - dateA;
                });
            }

            // Réorganiser les cartes filtrées dans le conteneur
            const container = document.getElementById('reservations-container');
            container.innerHTML = ''; // Vider le conteneur
            filteredCards.forEach(card => {
                container.appendChild(card); // Ajouter les cartes filtrées
            });
        };

        // Ajouter les écouteurs d'événements pour appliquer les filtres en temps réel
        filterDate.addEventListener('input', applyFilters);
        filterType.addEventListener('change', applyFilters);
        sortDate.addEventListener('change', applyFilters);

        // Réinitialiser les filtres
        resetButton.addEventListener('click', () => {
            filterDate.value = '';
            filterType.value = '';
            sortDate.value = 'asc';
            applyFilters(); // Réappliquer les filtres pour afficher toutes les cartes
        });

        // Appliquer les filtres au chargement de la page pour assurer l'état correct
        applyFilters();
    });

</script>
<style>
    .badge-primary {
        background-color: #ff9f43;
    }

    .badge-success {
        background-color: #28a745;
    }

    .badge-warning {
        background-color: #ffc107;
    }

    .card {
        border-radius: 10px;
    }

    .card-body {
        padding: 1.5rem;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: flex-start;
        position: relative;
    }

    .card-title {
        font-weight: bold;
    }

    .description {
        font-size: 1.1rem;
        color: #666;
    }

    .btn-lg {
        padding: 0.75rem 1.25rem;
        font-size: 1.25rem;
    }

    .card.shadow-sm.flex-row {
        display: flex;
        flex-direction: row;
        position: relative;
    }

    .badge-container {
        position: absolute;
        top: 10px;
        right: 10px;
    }

    .badge {
        font-size: 1rem;
        padding: 0.5rem 2rem;
    }

    .date-time {
        font-size: 1.2rem;
        color: #333;
    }

        .date-time .date-icon, .date-time .time-icon {
            font-size: 1.2rem;
            color: #007bff;
            vertical-align: middle;
        }

        .date-time .date-text, .date-time .time-text {
            margin-left: 0.5rem;
        }

        .date-time .date-text {
            font-weight: bold;
        }

        .date-time .time-text {
            color: #555;
        }

    .transport-icon {
        font-size: 1.2rem;
        color: #007bff;
        margin-right: 0.5rem;
    }

    .btn-details {
        position: absolute;
        bottom: 30px;
        right: 20px;
        background-color: #007bff;
        color: #fff;
        border: none;
        padding: 0.5rem 1rem;
        font-size: 1rem;
        border-radius: 5px;
        text-align: center;
        font-weight: bold;
    }

        .btn-details:hover {
            background-color: #0056b3;
        }

    .country-section {
        width: 250px; 
        background-color: #007bff;
        color: #fff;
        padding: 1rem; 
        border-radius: 10px 0 0 10px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        text-align: center; 
        overflow: hidden; 
        text-overflow: ellipsis; 
        white-space: nowrap; 
    }

        
        .country-section .badge-country {
            background-color: transparent;
            color: #fff;
            font-size: 1.2rem;
            padding: 0.5rem 0;
            border-radius: 0;
            overflow: hidden; 
            text-overflow: ellipsis; 
            white-space: nowrap;
        }

    .details-section {
        flex-grow: 1;
        padding-left: 1.5rem;
    }

    .filters {
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
        gap: 1rem;
        border: 1px solid #ddd;
        padding: 1rem;
        border-radius: 5px;
        background-color: #f9f9f9;
    }

        .filters .form-group {
            margin-bottom: 0;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            margin-right: 1rem;
            flex-grow: 1;
            min-width: 150px;
        }

            .filters .form-group label {
                margin-bottom: 0.5rem;
                font-weight: bold;
                white-space: nowrap;
            }

        .filters .form-control {
            width: 100%;
            max-width: 200px;
            display: inline-block;
            padding: 0.375rem 0.75rem;
            font-size: 1rem;
            line-height: 1.5;
            color: #495057;
            background-color: #fff;
            background-clip: padding-box;
            border: 1px solid #ced4da;
            border-radius: 0.25rem;
            transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        }

            .filters .form-control:focus {
                border-color: #80bdff;
                outline: 0;
                box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);
            }

    #reset-filters {
        margin-left: 1rem;
        background-color: #dc3545;
        color: #fff;
        border: none;
        padding: 0.5rem 1rem;
        font-size: 1rem;
        border-radius: 5px;
        text-align: center;
        font-weight: bold;
        cursor: pointer;
    }

        #reset-filters:hover {
            background-color: #c82333;
        }

    #sort-date {
        width: auto;
    }
</style>