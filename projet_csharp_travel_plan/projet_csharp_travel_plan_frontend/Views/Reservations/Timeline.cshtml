@model IEnumerable<projet_csharp_travel_plan_frontend.DTO.ReservationPaysModelDTO>

@{
    ViewData["Title"] = "Timeline des Réservations";
    System.Globalization.CultureInfo.CurrentCulture = new System.Globalization.CultureInfo("fr-FR");

    // Tri des réservations par date et heure croissantes (date la plus proche à la plus lointaine)
    var sortedReservations = Model.OrderBy(r => r.DateDebut).ThenBy(r => r.HeureDebut).ToList();
}

<div class="container mt-5">

    <!-- Bouton pour retourner à la liste des voyages -->
    <a href="/Identity/Account/Manage/MesVoyages" class="btn btn-primary mb-3">
        <i class="fas fa-arrow-left"></i> Retour à Mes Voyages
    </a><br />

    <h1 class="display-4 font-weight-bold flex-grow-1 text-center">Étapes de votre voyage</h1>
    <!-- Boutons de filtrage -->
    Filtrez par : 
    <div class="filter-buttons mb-3">
        <button class="btn btn-info filter-btn" data-filter="all">Tous</button>
        <button class="btn btn-primary filter-btn" data-filter="logement">Logement</button>
        <button class="btn btn-success filter-btn" data-filter="activite">Activité</button>
        <button class="btn btn-warning filter-btn" data-filter="transport">Transport</button>
    </div>
    <div class="timeline">
        @for (int i = 0; i < sortedReservations.Count; i++)
        {
            var item = sortedReservations[i];
            var isFirst = i == 0;
            var isLast = i == sortedReservations.Count - 1;
            var filterType = item.Logement != null ? "logement" : item.Activite != null ? "activite" : item.Transport != null ? "transport" : "autre";

            <div class="timeline-item" data-filter="@filterType">
                <div class="timeline-icon">
                    @if (isFirst)
                    {
                        <span class="icon debut">
                            <i class="fas fa-flag-checkered"></i> <!-- Icône pour le début -->
                        </span>
                    }
                    else if (isLast)
                    {
                        <span class="icon fin">
                            <i class="fas fa-check-circle"></i> <!-- Icône pour la fin -->
                        </span>
                    }
                    else if (item.Logement != null)
                    {
                        <span class="icon logement">
                            <i class="fas fa-bed"></i> <!-- Icône pour Logement -->
                        </span>
                    }
                    else if (item.Activite != null)
                    {
                        <span class="icon activite">
                            <i class="fas fa-running"></i> <!-- Icône pour Activité -->
                        </span>
                    }
                    else if (item.Transport != null)
                    {
                        <span class="icon transport">
                            <i class="fas fa-car"></i> <!-- Icône pour Transport -->
                        </span>
                    }
                </div>
                <a href="@Url.Action("Details", "Reservations", new { id = item.IdReservation })" class="timeline-content-link">
                    <div class="timeline-content">
                        <div class="country-section d-flex align-items-center mb-3">
                            @if (item.Logement != null)
                            {
                                <span class="badge badge-pill badge-primary">Logement</span>
                            }
                            else if (item.Activite != null)
                            {
                                <span class="badge badge-pill badge-success">Activité</span>
                            }
                            else if (item.Transport != null)
                            {
                                <span class="badge badge-pill badge-warning">Transport</span>
                            }
                        </div>
                        <div class="details-section">
                            <div class="date-time mb-2">
                                <span class="date-icon">&#128197;</span>
                                <span class="date-text">@item.DateDebut.ToString("dddd dd.MM.yyyy")</span>
                                <br />
                                <span class="time-icon">&#128337;</span>
                                <span class="time-text">@item.HeureDebut.ToString(@"hh\:mm")</span>
                            </div>
                            <hr>
                            @if (item.Logement != null)
                            {
                                <h5 class="card-title">@item.Logement.Nom</h5>
                                <p class="card-text">
                                    <strong>Hébergeur :</strong> @item.Logement.NomFournisseur<br />
                                </p>
                            }
                            else if (item.Activite != null)
                            {
                                <h5 class="card-title">@item.Activite.Nom</h5>
                                <p class="card-text">
                                    <strong>Prestataire :</strong> @item.Activite.NomFournisseur<br />
                                </p>
                            }
                            else if (item.Transport != null)
                            {
                                <h5 class="card-title">
                                    @if (item.Transport.CategorieTransportNom == "Avion")
                                    {
                                        <i class="fa-solid fa-plane-departure transport-icon"></i>
                                    }
                                    else if (item.Transport.CategorieTransportNom == "Train")
                                    {
                                        <i class="fa-solid fa-train transport-icon"></i>
                                    }
                                    else if (item.Transport.CategorieTransportNom == "Bateau")
                                    {
                                        <i class="fa-solid fa-ship transport-icon"></i>
                                    }
                                    @item.Transport.CategorieTransportNom
                                </h5>
                                <p class="card-text">
                                    <strong>Compagnie :</strong> @item.Transport.NomFournisseur<br />
                                    <strong>Lieu de départ :</strong> @item.Transport.LieuDepart<br />
                                </p>
                            }
                            else
                            {
                                <h5 class="card-title">Voyage: @item.IdVoyage</h5>
                                <p class="card-text">Aucun détail disponible</p>
                            }
                        </div>
                    </div>
                </a>
            </div>
        }
    </div>   <!-- Boutons pour défiler vers le haut et vers le bas -->
    <div class="scroll-buttons">
        <button id="scroll-up" class="btn btn-secondary"><i class="fas fa-arrow-up"></i></button>
        <button id="scroll-down" class="btn btn-secondary"><i class="fas fa-arrow-down"></i></button>
    </div>
</div>

<!-- Inclure Font Awesome pour les icônes -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const items = document.querySelectorAll(".timeline-item");

            const filterButtons = document.querySelectorAll(".filter-btn");
            const timelineItems = document.querySelectorAll(".timeline-item");

            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add("visible");
                    } else {
                        entry.target.classList.remove("visible");
                    }
                });
            }, {
                threshold: 0.1
            });

            items.forEach(item => {
                observer.observe(item);
            });

            document.getElementById("scroll-up").addEventListener("click", function () {
                window.scrollTo({ top: 0, behavior: 'smooth' });
            });

            document.getElementById("scroll-down").addEventListener("click", function () {
                window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' });
            });
            filterButtons.forEach(button => {
                button.addEventListener("click", function () {
                    const filter = this.getAttribute("data-filter");

                    timelineItems.forEach(item => {
                        if (filter === "all" || item.getAttribute("data-filter") === filter) {
                            item.style.display = "flex"; // Affiche l'élément
                        } else {
                            item.style.display = "none"; // Cache l'élément
                        }
                    });
                });
            });
        });
    </script>
}

<style>

    .filter-buttons .btn {
        margin-right: 10px;
        // Espace entre les boutons
    }
    .timeline {
        position: relative;
        min-width: 700px;
        margin: 0 auto;
        padding: 40px;
        list-style: none;
    }

        .timeline::before {
            content: '';
            position: absolute;
            width: 6px;
            background-color: #007bff;
            top: 50px; /* Aligné avec le premier point */
            bottom: 50px; /* Aligné avec le dernier point */
            left: 50%;
            margin-left: -3px;
        }

    .timeline-item {
        display: flex;
        align-items: center;
        width: 50%;
        position: relative;
        margin-bottom: 50px;
        padding: 20px 40px;
        box-sizing: border-box;

    }

        .timeline-item:nth-child(odd) {
            left: 0;
            justify-content: flex-end;
            padding-right: 30px;
        }

        .timeline-item:nth-child(even) {
            left: 50%;
            justify-content: flex-start;
            padding-left: 30px;
        }

    .timeline-icon {
        position: absolute;
        top: 0;
        width: 50px;
        height: 50px;
        background-color: white;
        border: 2px solid #007bff;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 24px;
        color: #007bff;
        z-index: 1;
    }

    .icon i {
        font-size: 24px;
    }

    .timeline-item:nth-child(odd) .timeline-icon {
        right: -25px;
    }

    .timeline-item:nth-child(even) .timeline-icon {
        left: -25px;
    }

    a.timeline-content-link {
        text-decoration: none;
        color: black;
    }

    .timeline-content {
        padding: 20px;
        background-color: #f9f9f9;
        border-radius: 15px;
        border: none; /* Suppression des bordures */
        position: relative;
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
        flex-grow: 1;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        min-height: 150px; /* Ajoutez cette ligne pour fixer une hauteur minimale */
        min-width: 500px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

        .timeline-content h4 {
            margin-top: 0;
        }

        .timeline-content:hover {
            transform: translateY(5px);
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
            background-color: #fefefe; 
        }


    .badge-primary,
    .badge-success,
    .badge-warning {
        border: none; /* Suppression des bordures des badges */
    }

    .badge-primary {
        background-color: #0022ff;
    }

    .badge-success {
        background-color: #008f00;
    }

    .badge-warning {
        background-color: #ff8900;
    }

    .badge {
        font-size: 1rem;
        padding: 0.5rem 2rem;
    }

    .date-time {
        font-size: 1.2rem;
        color: #333;
    }

        .date-time .date-icon,
        .date-time .time-icon {
            font-size: 1.2rem;
            color: #007bff;
            vertical-align: middle;
        }

        .date-time .date-text,
        .date-time .time-text {
            margin-left: 0.5rem;
        }

        .date-time .date-text {
            font-weight: bold;
        }

        .date-time .time-text {
            color: #555;
        }

    .transport-icon {
        font-size: 1.2rem;
        color: #007bff;
        margin-right: 0.5rem;
    }

    .country-section {
        display: flex;
        align-items: center;
        justify-content: flex-start;
    }

        .country-section .badge-country {
            background-color: #007bff;
            color: #fff;
            font-size: 1.2rem;
            padding: 0.5rem;
            border-radius: 5px;
        }

    /* Animations for entry */
    .timeline-item {
        opacity: 0;
        transform: translateY(20px);
        transition: opacity 0.6s ease-out, transform 0.6s ease-out;
    }

        .timeline-item.visible {
            opacity: 1;
            transform: translateY(0);
        }

    .font-weight-bold {
        font-weight: bold;
    }

    /* Styles pour centrer le titre */
    .text-center {
        text-align: center;
    }

    /* Ajustement pour le bouton Détails en bas à droite */
    .d-flex {
        display: flex;
    }

    .justify-content-end {
        justify-content: flex-end;
    }

    /* Link states */
    a.timeline-content-link,
    a.timeline-content-link:hover,
    a.timeline-content-link:focus,
    a.timeline-content-link:visited {
        text-decoration: none;
        color: inherit; /* Ensure link text color remains the same */
    }


    .scroll-buttons {
        position: fixed;
        bottom: 100px;
        right: 80px;
        display: flex;
        flex-direction: column;
        gap: 10px;
    }

        .scroll-buttons .btn {
            font-size: 35px;
            padding: 10px;
            border-radius: 10%;
        }
</style>
